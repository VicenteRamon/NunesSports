@page "/products"
@inject HttpClient Http
@inject NavigationManager NavigationManager
@rendermode @(new InteractiveWebAssemblyRenderMode(prerender: false))

<h3>ProductsOverview</h3>

<PageTitle>Products</PageTitle>

<h1>Products</h1>

<p>Lorem.</p>

@if (products.Count == 0)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Description</th>
                <th>Price</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in products)
            {
                <tr>
                    <td>@product.Name</td>
                    <td>@product.Description</td>
                    <td>@product.Price</td>
                    <td><button class="btn btn-primary" @onclick="@(() => EditProduct(@product.Id))">Editar</button></td>
                </tr>
            }
        </tbody>
    </table>
}

<button class="btn btn-primary" @onclick="AddProduct">Adicionar novo produto</button>

@code {
        List<Product> products = new List<Product>();

    protected override async Task OnInitializedAsync()
    {
        await Task.Delay(500);

        var result = await Http.GetFromJsonAsync<List<Product>>("api/products");
        if (result != null)
        {
            products = result;
        }


    }

    void AddProduct()
    {
        NavigationManager.NavigateTo("/edit-product");
    }

    void EditProduct(int id)
    {
        NavigationManager.NavigateTo($"/edit-product/{id}");
    }

}